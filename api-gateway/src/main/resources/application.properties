spring.application.name=api-gateway
server.port=9000
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/spring-boot-microservices-realm

#Swagger properties
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

springdoc.swagger-ui.urls[0].name= Product Service
springdoc.swagger-ui.urls[0].url=/aggregate/product-service/v1/api-docs
springdoc.swagger-ui.urls[1].name= Order Service
springdoc.swagger-ui.urls[1].url=/aggregate/order-service/v1/api-docs
springdoc.swagger-ui.urls[2].name= Inventory Service
springdoc.swagger-ui.urls[2].url=/aggregate/inventory-service/v1/api-docs

#Resilience4J Properties
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

#Resilience4J Properties for timeout
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

#Resilience4J Retry Properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s

#Prometheus Properties
#exposes the endpoints' health, info, metrics, and prometheus through the actuator.
management.endpoints.web.exposure.include=health, info, metrics, prometheus
#micrometer to gather the metrics in the form of a histogram and send it to Prometheus
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=api-gateway
#We can set it to 100% by adding the below property
management.tracing.sampling.probability=1.0
